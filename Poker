import random
from typing import List

# Poker Kombinationen:
# 0 High Card: Höchste Karte
# 1 One Pair: Ein Paar, gleiches Symbol
# 2 Two Pairs: Zwei Paare
# 3 Three of a Kind: Drilling
# 4 Straight: Fünf aufeinanderfolgende Symbole, verschiedene Farben
# 5 Flush: Fünf Karten der gleichen Farbe
# 6 Full House: Drilling und ein Paar
# 7 Four of a Kind: Vier gleiche Symbole
# 8 Straight Flush: Fünf aufeinanderfolgende Symbole, gleiche Farbe
# 9 Royal Flush: 10, J, Q, K, A, gleiche Farbe


#Karten als Zahlen 0-51: Die Karten werden wie vorher als Zahlen 0-51 dargestellt.
# Jede Karte wird durch karte // 4 (Symbol) und karte % 4 (Farbe) aufgeschlüsselt.


def main(hand_size=5, max_hands=100000):
    combinations = {
        0: "High Card",
        1: "One Pair",
        2: "Two Pairs",
        3: "Three of a Kind",
        4: "Straight",
        5: "Flush",
        6: "Full House",
        7: "Four of a Kind",
        8: "Straight Flush",
        9: "Royal Flush"
    }

    # Statistik, wie oft jede Kombination vorkommt
    combination_statistic = {k: 0 for k in combinations}

    # Simuliere mehrere Hände
    for _ in range(max_hands):
        hand = random.sample(range(52), hand_size)  # Ziehe eine zufällige Hand (5 Karten von 0-51)
        comb_type = combination_type(hand)  # Bestimme die Kombination
        combination_statistic[comb_type] += 1

    # Ausgabe der Ergebnisse
    for comb_type, count in combination_statistic.items():
        print(f"{combinations[comb_type]}: {count} ({count / max_hands * 100:.2f}%)")

